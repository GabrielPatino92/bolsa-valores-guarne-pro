version: '3.9'

services:
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: guarne-postgres
    environment:
      POSTGRES_USER: guarne_dev
      POSTGRES_PASSWORD: guarne_dev_pass_2024
      POSTGRES_DB: guarne_trading
      TZ: America/Bogota
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U guarne_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - guarne-network

  redis:
    image: redis:7-alpine
    container_name: guarne-redis
    environment:
      TZ: America/Bogota
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
    networks:
      - guarne-network

  prometheus:
    image: prom/prometheus:latest
    container_name: guarne-prometheus
    environment:
      TZ: America/Bogota
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - guarne-network

  grafana:
    image: grafana/grafana:latest
    container_name: guarne-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin_guarne_2024
      GF_USERS_ALLOW_SIGN_UP: 'false'
      TZ: America/Bogota
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - guarne-network

  minio:
    image: minio/minio:latest
    container_name: guarne-minio
    environment:
      MINIO_ROOT_USER: guarne_minio
      MINIO_ROOT_PASSWORD: guarne_minio_pass_2024
      TZ: America/Bogota
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - guarne-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  minio_data:
    driver: local

networks:
  guarne-network:
    driver: bridge
